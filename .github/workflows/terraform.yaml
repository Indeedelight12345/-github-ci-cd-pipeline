name: Terraform Ansible Pipeline newpipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: us-east-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    outputs:
      public_ip: ${{ steps.tf_output.outputs.public_ip }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Add SSH key (optional)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 644 ~/.ssh/id_rsa.pub

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate
      - name: schek teh diretory 
        run: |
             ls -la ./terraform
              ls -la 
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan


      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Get Terraform Output (EC2 IP)
        id: tf_output
        working-directory: ./terraform
        run: |
          echo "public_ip=$(terraform output -raw ec2_public_ip)" >> "$GITHUB_OUTPUT"

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ansible & Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass
          pip install ansible boto3

      - name: Add SSH Private Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible Playbook
        env:
          EC2_PUBLIC_IP: ${{ needs.terraform.outputs.public_ip }}
        run: |
          echo "[web]" > inventory
          echo "$EC2_PUBLIC_IP ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory
          ansible-playbook -i inventory ./ansible/deploy.yaml
          ansible-playbook -i inventory ./ansible/ansibledeploy.yaml
